// Code generated by mockery v2.44.1. DO NOT EDIT.

package mocks

import (
	models "github.com/AlejandroAldana99/yalo-challenge/models"
	mock "github.com/stretchr/testify/mock"
)

// IRecomendationService is an autogenerated mock type for the IRecomendationService type
type IRecomendationService struct {
	mock.Mock
}

// GetRecomendationsByUserID provides a mock function with given fields: userID
func (_m *IRecomendationService) GetRecomendationsByUserID(userID string) (models.Recommendation, error) {
	ret := _m.Called(userID)

	if len(ret) == 0 {
		panic("no return value specified for GetRecomendationsByUserID")
	}

	var r0 models.Recommendation
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (models.Recommendation, error)); ok {
		return rf(userID)
	}
	if rf, ok := ret.Get(0).(func(string) models.Recommendation); ok {
		r0 = rf(userID)
	} else {
		r0 = ret.Get(0).(models.Recommendation)
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(userID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewIRecomendationService creates a new instance of IRecomendationService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIRecomendationService(t interface {
	mock.TestingT
	Cleanup(func())
}) *IRecomendationService {
	mock := &IRecomendationService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
